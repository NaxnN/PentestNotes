# vulnerable to sql injection
# vulnerable parameter: email
# exploit method 1. or 1=1
# exploit method 2. union select
# from HackTheBox GoodGames


from flask import Blueprint, render_template, redirect, url_for, request, flash, jsonify, abort, send_from_directory, session                                                   
#from werkzeug.security import generate_password_hash, check_password_hash                                                                                                      
import hashlib                                                                                                                                                                  
from mysql.connector import errorcode                                                                                                                                           
import mysql.connector                                                                                                                                                          
from werkzeug.utils import secure_filename                                                                                                                                      
from flask_login import login_user, logout_user, login_required, current_user                                                                                                   
from .models import User                                                                                                                                                        
from . import db                                                                                                                                                                
import imghdr                                                                                                                                                                   
import os                                                                                                                                                                       
from flask import Flask                                                                                                                                                         
                                                                                                                                                                                
auth = Blueprint('auth', __name__) 

@auth.route('/login', methods=['POST'])                                                                                                                                         
def login_post():                                                                                                                                                               
    if request.method == "POST":                                                                                                                                                
        email = request.form.get('email')                                                                                                                                       
        password = request.form.get('password')                                                                                                                                 
        remember = True if request.form.get('remember') else False                                                                                                              
        password = hashlib.md5(password.encode('utf-8')).hexdigest()                                                                                                            
        try:                                                                                                                                                                    
            connector = connections()                                                                                                                                           
            print("Connected Successfully")                                                                                                                                     
        except mysql.connector.Error as err:                                                                                                                                    
            print("Database error")                                                                                                                                             
        try:                                                                                                                                                                    
            cursor = connector.cursor()                                                                                                                                         
            sql_command = "SELECT * FROM user WHERE email = '%s' AND password = '%s'" % (email, password)                                                                       
            cursor.execute(sql_command)                                                                                                                                         
            results = cursor.fetchall()
            print(results)
            print(len(results))
            for result in results:
                if result and len(result) != 0:
                    session['loggedin'] = True
                    session['id'] = result[0]
                    session['username'] = result[3]
                    session['email'] = result[1]
                    return render_template('success.html', results=results)
                else:
                    error = "Incorrect credentials supplied"
                    return render_template('signup.html', error=error)
        except:
            error = "Incorrect credentials supplied"
            return render_template('signup.html', error=error)
    else:
        return render_template('signup.html')


