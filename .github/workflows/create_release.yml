name: Release pdf 

on:
  push:
    branches: [ main ]

jobs:
       
  archive-build-artifacts:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:

      - name: Step 1 - Create a temporary folder
        run: |
          sudo apt install pandoc
          sudo apt install pdftk
          sudo apt install texlive-latex-base
          sudo apt install texlive-xetex
          mkdir ttt
          mkdir output
          git clone https://github.com/XHNan/PentestNotes.git
          curl https://raw.githubusercontent.com/XHNan/PentestNotes/page/createpdf.py -L -o tt.py
          python3 tt.py
          pdftk ./ttt/*.pdf cat output ./output/pentestnotes.pdf
        
      - name: Step 2 - Use the Upload Artifact GitHub Action
        uses: actions/upload-artifact@v2
        with: 
          name: assets-for-download
          path: output
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./output/pentestnotes.pdf
          asset_name: pentestnotes.pdf
          asset_content_type: application/pdf